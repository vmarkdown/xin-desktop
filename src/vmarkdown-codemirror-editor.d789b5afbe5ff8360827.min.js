!function(e,n){"object"==typeof exports&&"object"==typeof module?module.exports=n():"function"==typeof define&&define.amd?define([],n):"object"==typeof exports?exports.CodeMirrorEditor=n():e.CodeMirrorEditor=n()}(window,function(){return function(e){function n(n){for(var o,l,s=n[0],c=n[1],a=n[2],d=0,h=[];d<s.length;d++)l=s[d],r[l]&&h.push(r[l][0]),r[l]=0;for(o in c)Object.prototype.hasOwnProperty.call(c,o)&&(e[o]=c[o]);for(u&&u(n);h.length;)h.shift()();return i.push.apply(i,a||[]),t()}function t(){for(var e,n=0;n<i.length;n++){for(var t=i[n],o=!0,s=1;s<t.length;s++){var c=t[s];0!==r[c]&&(o=!1)}o&&(i.splice(n--,1),e=l(l.s=t[0]))}return e}var o={},r={0:0},i=[];function l(n){if(o[n])return o[n].exports;var t=o[n]={i:n,l:!1,exports:{}};return e[n].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=e,l.c=o,l.d=function(e,n,t){l.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:t})},l.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,n){if(1&n&&(e=l(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var o in e)l.d(t,o,function(n){return e[n]}.bind(null,o));return t},l.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return l.d(n,"a",n),n},l.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},l.p="";var s=window.webpackJsonpCodeMirrorEditor=window.webpackJsonpCodeMirrorEditor||[],c=s.push.bind(s);s.push=n,s=s.slice();for(var a=0;a<s.length;a++)n(s[a]);var u=c;return i.push([2,1]),t()}([,,function(e,n,t){t(3),t(4);const o=t(5);e.exports=o},function(e,n,t){},function(e,n,t){},function(e,n,t){t(6);const o=t(0);t(1),t(7),t(9),t(10);const r=t(11);e.exports=class extends r{constructor(e,n){super(),this.options=n||{},this.editor=o(e,Object.assign({theme:"default vmarkdown",value:"",mode:"markdown",lineWrapping:!0,styleActiveLine:!0,scrollbarStyle:"native",dragDrop:!0,selectionsMayTouch:!1,extraKeys:{Enter:"newlineAndIndentContinueMarkdownList"}},this.options))}on(e,n){const t=this;switch(e){case"beforeChange":break;case"change":t.editor.on("change",function(e,o){t.$onChange(o,n)});break;case"scroll":t.editor.on("scroll",function(){t.$onScroll(n)});break;case"cursorChange":t.editor.on("cursorActivity",function(){t.$onCursorChange(n)})}}$onChange(e,n){const t=this;var o=e.origin,r=e.from,i=e.to,l=e.text,s=e.removed,c=r.line+1,a=i.line+1;r.ch,i.ch;const u={origin:o,changes:[]};if("+input"===o&&l[0].length>0&&0===s[0].length?u.origin="insert":"+input"===o&&l[0].length>0&&s[0].length>0?u.origin="replace":"+delete"===o&&s[0].length>0&&(u.origin="remove"),"+input"===o||"+delete"===o){let e=0,n=0===s.slice(-1)[0].length;for(let o=c;o<=a;o++){if(o===c&&(0===l[0].length&&s[e].length>0&&!n||l[0].length>0&&0===s[0].length||l[0].length>0&&s[e].length>0)){let e=t.getLine(o);u.changes.push({action:"replace",line:o,before:"",after:e})}else o===a&&n||u.changes.push({action:"remove",line:o,before:"",after:""});e++}}n&&n.call(t,u)}$onScroll(e){e&&e.call(this)}$onCursorChange(e){const n=this.editor.getCursor(),t={line:n.line+1,column:n.ch+1},o=this.editor.cursorCoords(n.line);Object.assign(t,o),e&&e.call(this,t)}getValue(){return this.editor.getValue()}setValue(e){const n=e+"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n";this.editor.setValue(n)}scrollTo(e){}async scrollToLine(e){}scrollIntoViewByLine(e){const n={line:e,ch:0};this.editor.scrollIntoView(n)}getScrollTop(){}getFirstVisibleCoverageRatio(e,n){const t=this;if(n.start.line===n.end.line){const n=e-1;var o=t.editor.heightAtLine(n),r=t.editor.getLineHandle(n).height;return{line:e,coverageRatio:r?o/r:0}}const i=n.start.line,l=n.end.line-i+1;return{line:e,coverageRatio:(e<n.start.line?n.start.line:e)/l}}getFirstVisibleLine(){var e=this.editor.display.scroller.scrollTop;return this.editor.coordsChar({top:e,left:0},"local").line+1}getLastVisibleRow(){}getLine(e){return this.editor.doc.getLine(e-1)}}},,,,,,function(e,n){e.exports=class{on(e,n){}getValue(){}setValue(){}scrollTo(){}scrollToLine(e){}getLine(e){}}}])});